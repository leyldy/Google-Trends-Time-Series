CI <- rev(2*pi_hat - quantiles)
names(CI) <- c()
CI
test <- c(676, 206, 230, 256, 280, 433, 337, 466, 497, 512, 794, 428, 452, 512)
control <- c(88, 570, 605, 617, 653, 2913, 924, 286, 1098, 982, 2346, 321, 615, 519)
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
par()
par()
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
par(mfrow=c(1,1))
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
par(mfrow=c(1,1))
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
dev.off()
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
mean(diff)
se_mean_diff <- sqrt(var(diff) / length(diff))
#95% Confidence Interval
c(mean(diff) - qt(0.975, df = 13) * se_mean_diff,
mean(diff) + qt(0.975, df = 13) * se_mean_diff)
se_mean_diff
sd(diff)
median(diff)
diff
length(diff)
qbinom(0.025, 14)
qbinom(0.025, 14, prob = 1/2)
test
length(test)
medians <-c()
for(i in 1:1000){
median_samp <- sample(diff, 14, replace = T)
medians <- c(medians, median(median_samp))
}
medians
quantile(medians, c(0.025, 0.975))
quantiles <- quantile(medians, c(0.025, 0.975))
CI <- rev(2*pi_hat - quantiles)
names(CI) <- c()
CI
quantiles <- quantile(medians, c(0.025, 0.975))
CI <- rev(2*median(diff) - quantiles)
names(CI) <- c()
CI
median(present) - median(not)
present
length(present)
diff_med <-c()
for(i in 1:1000){
present_samp <- sample(present, 10, replace = T)
not_samp <- sample(not, 10, replace = T)
diff_med <- c(diff_med, median(present_samp) - median(not_samp))
}
diff_med
sd(diff_med) * 999/1000
quantiles <- quantile(diff_med, c(0.025, 0.975))
CI <- rev(2*median(diff) - quantiles)
names(CI) <- c()
CI
quantiles <- quantile(diff_med, c(0.025, 0.975))
CI <- rev(2*median(present) - median(not) - quantiles)
names(CI) <- c()
CI
quantiles <- quantile(diff_med, c(0.025, 0.975))
quantiles
CI <- rev(2*median(present) - (median(not) - quantiles))
names(CI) <- c()
CI
quantiles <- quantile(diff_med, c(0.025, 0.975))
CI <- rev(2*(median(present) - median(not)) - quantiles))
names(CI) <- c()
CI
quantiles <- quantile(diff_med, c(0.025, 0.975))
CI <- rev(2*(median(present) - median(not)) - quantiles)
names(CI) <- c()
CI
rm(list=ls())
test <- c(676, 206, 230, 256, 280, 433, 337, 466, 497, 512, 794, 428, 452, 512)
control <- c(88, 570, 605, 617, 653, 2913, 924, 286, 1098, 982, 2346, 321, 615, 519)
diff <- test - control
plot(control, diff, main = "Difference vs. Control Rate",
xlab = 'Control Rate', ylab = "Difference (test - control)", col = "blue")
mean(diff)
#SD of difference:
sd(diff)
#SE of (mean of difference)
se_mean_diff <- sqrt(var(diff) / length(diff))
se_mean_diff
#95% Confidence Interval
c(mean(diff) - qt(0.975, df = 13) * se_mean_diff,
mean(diff) + qt(0.975, df = 13) * se_mean_diff)
median(diff)
#95% CI with median
medians <-c()
for(i in 1:10000){
median_samp <- sample(diff, 14, replace = T)
medians <- c(medians, median(median_samp))
}
quantiles <- quantile(medians, c(0.025, 0.975))
CI <- rev(2*median(diff) - quantiles)
names(CI) <- c()
CI
test_stat <- mean(diff)/se_mean_diff
#Is test-statistic significant enough under a 5% significance level?
abs(test_stat) > qt(0.975, 9)
wilcoxon.test(test, control, paired = T)
?Wilcoxon
?wilcox.test
wiclox.test(test, control, paired = T)
wilcox.test(test, control, paired = T)
test_stat_signed
sign <- ifelse(diff > 0, 1, -1)
signed_rank <- sign*rank(abs(diff))
test_stat_signed <- sum(signed_rank[signed_rank > 0])
test_stat_signed
test_stat_signed
test_stat
qt(0.975, 9)
?qt
qsignrank(0.025, 10)
wilcox.test(test, control, paired = T)
a <- wilcox.test(test, control, paired = T)
a$statistic
a$parameter
a$null.value
test
length(test)
test_stat_signed < qsignrank(0.025, 13)
qsignrank(0.025, 13)
abs(test_stat) > qt(0.975, 13)
test
present <- c(22.8, 10.2, 20.8, 27.0, 19.2, 9.0, 14.2, 19.8, 14.5, 14.8)
not <- c(23.5, 31.0, 19.5, 26.2, 26.5, 25.2, 24.5, 23.8, 27.8, 22.0)
present
dsignrank(W_plus,n = 10)
present <- c(22.8, 10.2, 20.8, 27.0, 19.2, 9.0, 14.2, 19.8, 14.5, 14.8)
not <- c(23.5, 31.0, 19.5, 26.2, 26.5, 25.2, 24.5, 23.8, 27.8, 22.0)
par(xaxs='i',yaxs='i',mfrow = c(2,1))
plot(present,rep(0, 10), main = "Treatment Group (Field Present)", pch=16,xpd=NA)
plot(present,rep(0, 10), main = "Control Group (Field Not Present)", pch=16,xpd=NA)
par(xaxs='i',yaxs='i',mfrow = c(2,1))
plot(present,rep(0, 10), main = "Treatment Group (Field Present)", pch=16,xpd=NA)
par(xaxs='i',yaxs='i',mar = c(5,1,1,1),mfrow = c(2,1))
plot(present,rep(0, 10), main = "Treatment Group (Field Present)", pch=16,xpd=NA)
plot(present,rep(0, 10), main = "Control Group (Field Not Present)", pch=16,xpd=NA)
diff <- present - not
se_mean_diff <- sqrt(var(diff) / length(diff))
CI <- c(mean(diff) - qt(0.975, df = 9) * se_mean_diff,
mean(diff) + qt(0.975, df = 9) * se_mean_diff)
CI
test_stat <- mean(diff) / se_mean_diff
2*dt(test_stat, df = 9)
test_stat
2*dt(test_stat, df = 9)
signed <- ifelse(diff > 0, 1, -1)
signed_rank <- signed * rank(abs(diff))
W_plus <- sum(signed_rank[signed_rank > 0])
W_plus
dsignrank(W_plus,n = 10)
2*dsignrank(W_plus,n = 10)
wilcox.test(present, not, paired = T)
length(present)
?dsignrank
2*psignrank(W_plus,n = 10)
2*pt(test_stat, df = 9)
median(present) - median(not)
diff_med <-c()
for(i in 1:10000){
present_samp <- sample(present, 10, replace = T)
not_samp <- sample(not, 10, replace = T)
diff_med <- c(diff_med, median(present_samp) - median(not_samp))
}
sd(diff_med) * 999/1000
quantiles <- quantile(diff_med, c(0.025, 0.975))
CI <- rev(2*(median(present) - median(not)) - quantiles)
names(CI) <- c()
CI
sqrt(83)
sqrt(83) * 0.3197
sqrt(83) * c(0.3197, 0.3448, 0.3285, 0.0724, 0.100728)
setwd("~/Documents/School/STAT154/hw/hw1")
head(stock)
stock <- read.csv("stockmarket.csv", stringsAsFactors = F)
stock <- read.csv("stockmarket.csv", stringsAsFactors = F)
head(stock)
head(stock)
?unstack
knitr::opts_chunk$set(echo = TRUE)
x0 <- rnorm(1, mean = 0, sd = sqrt(4/3))
x0
white <- rnorm(100, mean = 0, sd = 1)
white
ar1 <- function(n){
if(n == 1) return(0.5 * x0 + white(n))
else{
return(c(0.5 * ar1(n - 1) + white(n), ar1(n - 1)))
}
}
test <- ar1(100)
ar1 <- function(n){
if(n == 1) return(0.5 * x0 + white[n])
else{
return(c(0.5 * ar1(n - 1) + white[n], ar1(n - 1)))
}
}
ar1 <- function(n){
test <- ar1(100)
test <- ar1(3)
test
0.5 * x0 + white[n]
0.5 * x0 + white[1]
0.5 * (0.5 * x0 + white[1]) + white[2]
obs <- ar1(100)
ar1(10)
ar1 <- function(n){
if(n == 1) return(0.5 * x0 + white[n])
else{
return(c(0.5 * ar1(n - 1) + white[n]))
}
}
ar1(10)
sapply(1:100, ar1)
obs <- sapply(1:100, ar1)
plot(obs)
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation")
obs <- sapply(1:100, ar1)
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation")
?tdist
?dist
?rnor
??tdistribution
??student
?rt
pop <- rt(1000, 5)
head(pop)
obs <- ar1(1000)
pop <- rt(1000, 5)
x0 <- 0
obs <- ar1(1000)
white <- rt(1000, 5)
x0 <- 0
obs <- ar1(1000)
options(expressions = 2000)
obs <- ar1(1000)
options(expressions = 10000)
obs <- ar1(1000)
obs
obs <- sapply(1:1000, ar1)
actual_vals <- obs[901:1000]
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations")
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "b")
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "k")
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "l")
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations", type = "l")
actual_vals <- obs[2:101]
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations", type = "l")
901
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations", type = "l")
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "l")
actual_vals <- obs[901:1000]
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations", type = "l")
obs <- sapply(1:100, ar1)
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "l")
obs <- sapply(1:100, ar1)
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "l")
x0 <- rnorm(1, mean = 0, sd = sqrt(4/3))
white <- rnorm(100, mean = 0, sd = 1)
ar1 <- function(n){
if(n == 1) return(0.5 * x0 + white[n])
else{
return(c(0.5 * ar1(n - 1) + white[n]))
}
}
obs <- sapply(1:100, ar1)
plot(obs, main = "AR(1) Process", xlab = "time index", ylab = "Observation",
type = "l")
white <- rt(1000, 5)
x0 <- 0
options(expressions = 10000)
obs <- sapply(1:1000, ar1)
actual_vals <- obs[901:1000]
plot(actual_vals, main = "AR(1) process from t-distribution", xlab = "time",
ylab = "Observations", type = "l")
knitr::opts_chunk$set(echo = TRUE)
arima.sim(n = 100, list(ar = c(1, -0.65451), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.65451), ma = 0))
?acf
plot(ar)
plot(ar_2)
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.65451), ma = 0))
plot(ar_2_period)
plot(ar2_period)
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
acf(ar2_period, lag.max = 10)
acf(ar2_period)
acf(ar2_period)
?ARMAacf
ARMAacf(ar2_period)
acf(ar2_period)
?acf
ar2_period <- arima.sim(n = 100, list(ar = c(1, -(cos(pi/5))^2), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
ar2_period <- arima.sim(n = 100, list(ar = c(1, -(cos(pi/5))^2)))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
, ma = 0
ar2_period <- arima.sim(n = 100, list(ar = c(1, -(cos(pi/5))^2), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
ar2_period <- arima.sim(n = 100, list(ar = c(0.5, -(cos(pi/5))^2 / 0.25), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(0.5, -(cos(pi/5))^2 / 0.25), ma = 0))
(cos(pi/5))^2)
(cos(pi/5))^2
(cos(pi/5))^2 + 1
((cos(pi/5))^2 + 1) * 4
((cos(pi/5))^2) * 4
sqrt(2.618034)
knitr::opts_chunk$set(echo = TRUE)
ar2_period <- arima.sim(n = 100, list(ar = c(-1, sqrt((cos(pi/5))^2 * 4), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
ar2_period <- arima.sim(n = 100, list(ar = c(-1, sqrt((cos(pi/5))^2 * 4), ma = 0)))
ar2_period <- arima.sim(n = 100, list(ar = c(sqrt((cos(pi/5))^2 * 4, -1), ma = 0)))
ar2_period <- arima.sim(n = 100, list(ar = c(sqrt((cos(pi/5))^2 * 4), -1), ma = 0))
sqrt((cos(pi/5))^2 * 4
)
ar2_period <- arima.sim(n = 100, list(ar = c(-sqrt((cos(pi/5))^2 * 4), -1), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(1, -(1/(4*cos(pi/5))^2)), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
1/(4*cos(pi/5))^2)
(1/(4*cos(pi/5))^2)
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.38196601125), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
sqrt(-1)
??complexnumbers
as.complex(sqrt(-1))
i
1i
1i*sqrt(1)
2.61803398875*1i
ar2_period <- arima.sim(n = 100, list(ar = c(1, 2.61803398875*1i), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(2.61803398875*1i,1), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(sqrt(2.61803398875)*1i,1), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(2.288242, -2), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(1.7989, -1), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(2, -1.52786), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(-2, -1.52786), ma = 0))
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.381966), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period)
acf(ar2_period, lag.max = 100)
acf(ar2_period, lag.max = 50)
4*-0.3819
ar2_period <- arima.sim(n = 100, list(ar = c(2, -1.52786), ma = 0))
1
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.381966), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period, lag.max = 50)
?ARMAtoMA
ARMAtoMA(ar = c(-1.5, 0.75))
ARMAtoMA(ar = c(-1.5, 0.75), lag.max = 100)
plot(ARMAtoMA(ar = c(-1.5, 0.75), lag.max = 100))
psi <- ARMAtoMA(ar = c(-1.5, 0.75), lag.max = 100)
head(psi)
psi <- ARMAtoMA(ar = c(-1.5, 0.75), lag.max = 100000)
head(psi)
1.5*1.5
-0.75
1.5*1.5-0.75
cos(-pi/3)
cos(-pi/3)*2
my_psi <- function(n){
return(2 * (2*sqrt(3)/3)^(-n) * cos(pi/6 * n - pi/3))
}
my_psi(1)
my_psi(0)
my_psi(2)
my_psi(3)
psi <- ARMAtoMA(ar = c(1.5, -0.75), lag.max = 100000)
plot(psi)
plot(psi)
psi <- ARMAtoMA(ar = c(1.5, -0.75), lag.max = 100)
psi <- ARMAtoMA(ar = c(1.5, -0.75), lag.max = 100)
plot(psi)
psi[1:100] - sapply(1:100, my_psi)
table(psi[1:100] - sapply(1:100, my_psi))
mean(psi[1:100] - sapply(1:100, my_psi))
psi[1:10]
my_psi[1:10]
my_psi(1:10)
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
lines(my_psi(1:100), col = "red")
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
lines(my_psi(1:100), col = "red")
?lines
plot.new()
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
lines(my_psi(1:100), col = "red")
lines(1:100,my_psi(1:100), col = "red")
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
lines(1:100,my_psi(1:100), col = "red")
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
plot.new()
lines(1:100,my_psi(1:100), col = "red")
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
plot(1:100,my_psi(1:100), col = "red")
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
dev.off()
plot(psi, xlab = "lag", ylab = "Coefficients", main = "Coefficients vs. Lag for AR(2) Process", col = "blue")
lines(1:100,my_psi(1:100), col = "red")
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.381966), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period, lag.max = 50)
ar2_period <- arima.sim(n = 100, list(ar = c(1, -0.381966), ma = 0))
plot(ar2_period, xlab = "Time", ylab = "Value", main = "AR(2) with pseudo-period of 10")
acf(ar2_period, lag.max = 50)
setwd("~/Desktop/School/STAT153")
setwd("~/Desktop/School/STAT153/midterm2")
read.csv("predictions/Q1_Jong_Lee_25344865.txt" ,delim = ",", header = F)
?read.csv
read.csv("predictions/Q1_Jong_Lee_25344865.txt", header = F)
q2 <- read.csv("predictions/Q2_Jong_Lee_25344865.txt", header = F)
q1 <- read.csv("predictions/Q1_Jong_Lee_25344865.txt", header = F)
q3 <- read.csv("predictions/Q3_Jong_Lee_25344865.txt", header = F)
q4 <- read.csv("predictions/Q4_Jong_Lee_25344865.txt", header = F)
q5 <- read.csv("predictions/Q4_Jong_Lee_25344865.txt", header = F)
q1_og <- read.csv("q1/q1_train.csv")
q2_og <- read.csv("q2/q2_train.csv")
plot(q1_og$activity)
plot(q1_og$activity, type = "l", xlim = c(526:629))
plot(q1_og$activity, type = "l", xlim = c(526,629))
plot(q1_og$activity, type = "l", xlim = c(0,629))
lines(q1$V1, col = "red")
plot(q1_og$activity, type = "l", xlim = c(0,629))
lines(526:629m q1$V1, col = "red")
lines(526:629, q1$V1, col = "red")
plot(q1_og$activity, type = "l", xlim = c(0,629), ylim = c(-2, 5))
lines(526:629, q1$V1, col = "red")
q2_og <- read.csv("q2_train.csv")
q4_og <- read.csv("q4_train.csv")
q2 <- read.csv("predictions/Q2_Jong_Lee_25344865.txt", header = F)
plot(q2, xlim = c(0,629))
plot(q2_og, xlim = c(0,629))
plot(q2_og$activity, xlim = c(0,629))
plot(q2_og$activity, xlim = c(0,629), type = "l")
q2_og
q2
plot(526:629, q2, col = "red")
q2
length(526:629)
lines(526:629, q2, col = "red")
length(q2)
lines(526:629, q2$V1, col = "red")
plot(q3_og$activity, xlim = c(0,629), type = "l")
q1 <- read.csv("predictions/Q1_Jong_Lee_25344865.txt", header = F)
q1_og <- read.csv("q1/q1_train.csv")
q2 <- read.csv("predictions/Q2_Jong_Lee_25344865.txt", header = F)
q2_og <- read.csv("q2_train.csv")
q3 <- read.csv("predictions/Q3_Jong_Lee_25344865.txt", header = F)
q3_og <- read.csv("q3/q3_train.csv")
q4 <- read.csv("predictions/Q4_Jong_Lee_25344865.txt", header = F)
q4_og <- read.csv("q4_train.csv")
q5 <- read.csv("predictions/Q4_Jong_Lee_25344865.txt", header = F)
plot(q3_og$activity, xlim = c(0,629), type = "l")
lines(526:629, q3$V1, col = "red")
q4 <- read.csv("predictions/Q4_Jong_Lee_25344865.txt", header = F)
q4_og <- read.csv("q4_train.csv")
plot(q4_og$activity, xlim = c(0,629), type = "l")
lines(526:629, q4$V1, col = "red")
plot(q4_og$activity, xlim = c(0,629), type = "l", ylim = c(-2, 2))
lines(526:629, q4$V1, col = "red")
q5_og <- read.csv("q5_train.csv")
q5_og <- read.csv("q5/q5_train.csv")
plot(q5_og$activity, xlim = c(0,629), type = "l", ylim = c(-2, 2))
plot(q5_og$activity, xlim = c(0,629), type = "l")
lines(526:629, q5$V1, col = "red")
plot(q4_og$activity, xlim = c(0,629), type = "l")
plot(q4_og$activity, xlim = c(0,629), type = "l", ylim = c(-2,2))
lines(526:629, q4$V1, col = "red")
plot(q4_og$activity, xlim = c(0,629), type = "l", ylim = c(-2,3))
lines(526:629, q4$V1, col = "red")
plot(q5_og$activity, xlim = c(0,629), type = "l")
lines(526:629, q5$V1, col = "red")
plot(q5_og$activity, xlim = c(0,629), type = "l", ylim = c(-1,3))
lines(526:629, q5$V1, col = "red")
plot(q4_og$activity, xlim = c(0,629), type = "l", ylim = c(-1,3))
lines(526:629, q4$V1, col = "red")
